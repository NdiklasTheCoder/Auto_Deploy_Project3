# ---

# - name: "configuration play." 
#   hosts: web
#   user: ubuntu
#   gather_facts: false
#   vars:
#     - ansible_python_interpreter: /usr/bin/python3
#     - ansible_host_key_checking: false
#     - ansible_stdout_callback: yaml

#       enviroment:
#         echo ENVIRONMENT=production > "backend/.env"
#         echo TYPEORM_CONNECTION=postgres >> "backend/.env"
#         echo TYPEORM_ENTITIES=./src/modules/domain/**/*.entity.ts >> "backend/.env"
#         echo TYPEORM_MIGRATIONS=./src/migrations/*.ts >> "backend/.env"
#         echo TYPEORM_MIGRATIONS_DIR=./src/migrations >> "backend/.env"
#         echo NODE_ENV=production >> "backend/.env"
#         echo TYPEORM_HOST=$TYPEORM_HOST >> "backend/.env"
#         echo TYPEORM_PORT=$TYPEORM_PORT >> "backend/.env"
#         echo TYPEORM_USERNAME=$TYPEORM_USERNAME >> "backend/.env"
#         echo TYPEORM_PASSWORD=$TYPEORM_PASSWORD >> "backend/.env"
#         echo TYPEORM_DATABASE=$TYPEORM_DATABASE >> "backend/.env"
#   pre_tasks:
#     - name: "wait 600 seconds for target connection to become reachable/usable."
#       wait_for_connection:
#         timeout: 60

#     - name: "install python for Ansible."
#       become: true
#       raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
#       changed_when: false

#   roles:
#     - configure-server


---

- name: "configuration play." 
  hosts: web
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml


  pre_tasks:
    - name: 'wait 600 seconds for target connection to become reachable/usable.'
      wait_for_connection:

    - name: 'install python for Ansible.'
      apt:
        name: python3
        state: latest
        update_cache: yes
      # Your code here

  # Get the environment variables from CircleCI and add to the EC2 instance
  environment:
    # - NODE_ENV: production
    # - ENVIRONMENT: production
    - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
    - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
    - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    - TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT')}}"
    - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
    - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
    - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
    - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"
    # Add more env vars here

  roles:
    - configure-server